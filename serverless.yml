service: space-ship-generator
frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  httpApi:
    cors:
      allowedOrigins:
        - "*"
      allowedHeaders:
        - "*"
      allowedMethods:
        - "*"
      maxAge: 86400
  environment:
    NODE_OPTIONS: --enable-source-maps
    GEMINI_API_KEY: ${env:GEMINI_API_KEY}
    SPACE_SHIP_BUCKET: space-ship-sprites
    SCOREBOARD_TABLE: ${self:service}-scoreboard-${sls:stage}
    IP_USAGE_TABLE: ${self:service}-ip-usage-${sls:stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:PutObjectAcl
            - s3:GetObject
            - s3:HeadObject
          Resource: arn:aws:s3:::space-ship-sprites/*
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchWriteItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.SCOREBOARD_TABLE}
            - arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.SCOREBOARD_TABLE}/index/*
            - arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.IP_USAGE_TABLE}

functions:
  generateSpaceShip:
    # Set function timeout to 29 seconds (max for API Gateway synchronous invocations)
    timeout: 29
    handler: src/handler.generateSpaceShipHandler
    events:
      - httpApi:
          path: /generate-space-ship
          method: post
  expandPrompt:
    timeout: 15
    handler: src/handler.expandPromptHandler
    events:
      - httpApi:
          path: /expand-prompt
          method: post
  generateSpriteSheet:
    timeout: 29
    handler: src/handler.generateSpriteSheetHandler
    events:
      - httpApi:
          path: /generate-sprite-sheet
          method: post
  diffBoundingBox:
    timeout: 29
    handler: src/handler.diffBoundingBoxHandler
    events:
      - httpApi:
          path: /diff-bounding-box
          method: post
  resize:
    timeout: 29
    handler: src/handler.resizeHandler
    events:
      - httpApi:
          path: /resize
          method: post
  nameShip:
    timeout: 15
    handler: src/handler.nameShipHandler
    events:
      - httpApi:
          path: /name-ship
          method: post
  scoreboardSet:
    timeout: 15
    handler: src/handler.scoreboardSetHandler
    events:
      - httpApi:
          path: /scoreboard
          method: post
  scoreboardList:
    timeout: 15
    handler: src/handler.scoreboardListHandler
    events:
      - httpApi:
          path: /scoreboard
          method: get
  getNumRemainingShips:
    timeout: 5
    handler: src/handler.getNumRemainingShipsHandler
    events:
      - httpApi:
          path: /get-num-remaining-ships
          method: get

plugins:
  - serverless-offline

package:
  patterns:
    # Include entire assets directory (example_1.png .. example_3.png and any future images)
    - assets/**

resources:
  Resources:
    ScoreboardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SCOREBOARD_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: score
            AttributeType: N
          - AttributeName: gsiPK
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: score
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: byScore
            KeySchema:
              - AttributeName: gsiPK
                KeyType: HASH
              - AttributeName: score
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    IpUsageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.IP_USAGE_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ip
            AttributeType: S
        KeySchema:
          - AttributeName: ip
            KeyType: HASH
